---
import BaseLayout from './BaseLayout.astro';
import type { MarkdownHeading } from 'astro';
import TableOfContents from '~/components/TableOfContents.astro';
import type { CollectionEntry } from 'astro:content';
import BlogPostJsonLd from '~/components/BlogPostJsonLd.astro';
import BlogPostNavigation from '~/components/BlogPostNavigation.astro';
import ShareButtons from '~/components/ShareButtons.astro';
import { getCollection } from 'astro:content';
import { newestFirst } from '~/lib/blog';
import MobileTableOfContents from '~/components/MobileTableOfContents.astro';
import { getCoverImageSrc, isExternalCoverImage } from '~/utils/image';
import type { BreadcrumbItem } from '~/components/Breadcrumb.astro';

export interface Props {
	post: CollectionEntry<'blog'>;
	headings: MarkdownHeading[];
	breadcrumbItems: BreadcrumbItem[];
}

const { post, headings, breadcrumbItems } = Astro.props;

// Get previous and next posts
const posts = (await getCollection('blog')).sort(newestFirst);
const currentIndex = posts.findIndex((p) => p.id === post.id);
const previousPost = posts[currentIndex + 1];
const nextPost = posts[currentIndex - 1];

const metadata = {
	title: post.data.seoTitle ?? post.data.title,
	description: post.data.seoDescription ?? post.data.excerpt,
	image: {
		url: getCoverImageSrc(post.data.cover),
		// we don't know the width and height of the remote image, so we use 1200x630 as a default
		width: isExternalCoverImage(post.data.cover) ? 1200 : post.data.cover.width,
		height: isExternalCoverImage(post.data.cover) ? 630 : post.data.cover.height,
	},
	og: {
		type: 'article' as const,
		article: {
			publishedTime: post.data.datePublished.toISOString(),
			modifiedTime: post.data.datePublished.toISOString(),
			author: 'Jannik Wempe',
			section: 'Web Development',
		},
	},
};

const hasTweetEmbed = Boolean(post.body?.includes('<Tweet'));
---

<BaseLayout {metadata} {breadcrumbItems}>
	<Fragment slot="header">
		<BlogPostJsonLd {post} />
		<!-- Transforms basic Tweet embeds into interactive widgets -->
		<!-- see https://astro-embed.netlify.app/components/twitter/  -->
		{hasTweetEmbed && <script is:inline async src="https://platform.twitter.com/widgets.js" />}
	</Fragment>

	<div class="container mx-auto py-8">
		<div class="flex gap-20">
			<!-- match prose max-w, otherwise image etc. may be wider (at least on Firefox) -->
			<main class="max-w-prose text-lg">
				<slot name="header" />
				<!-- Mobile TOC -->
				<div class="mt-8 xl:hidden">
					<MobileTableOfContents {headings} />
				</div>
				<slot />
				<div class="mt-16 flex flex-col gap-8">
					<hr class="border-slate-200 xl:hidden" />
					<ShareButtons url={Astro.url.toString()} title={post.data.title} class="self-center text-center xl:hidden" />
					<hr class="border-slate-200" />
					<BlogPostNavigation {previousPost} {nextPost} />
				</div>
			</main>
			<div class="relative hidden xl:block">
				<aside class="sticky top-24 flex max-h-[calc(100vh-8rem)] flex-col gap-8">
					<TableOfContents {headings} class="w-80" />
					<hr class="border-slate-200" />
					<ShareButtons url={Astro.url.toString()} title={post.data.title} class="hidden xl:block" />
				</aside>
			</div>
		</div>
	</div>
</BaseLayout>
