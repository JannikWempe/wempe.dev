---
import { getCollection } from 'astro:content';
import BlogPostCard from '../../../components/BlogPostCard.astro';
import DefaultLayout from '~/layouts/DefaultLayout.astro';
import { newestFirst } from '~/lib/blog';
import type { GetStaticPaths } from 'astro';
import { Icon } from 'astro-icon/components';
import BlogIndexJsonLd from '~/components/BlogIndexJsonLd.astro';

export const prerender = true;

export const getStaticPaths = (async () => {
	const posts = await getCollection('blog');

	const allTags = new Set<string>();
	posts.forEach((post) => {
		post.data.tags.forEach((tag) => allTags.add(tag));
	});

	return Array.from(allTags).map((tag) => ({
		params: { slug: tag },
		props: { tag },
	}));
}) satisfies GetStaticPaths;

const { tag } = Astro.props;
const posts = (await getCollection('blog', ({ data }) => data.tags.includes(tag))).sort(newestFirst);

const breadcrumbItems = [
	{ label: 'Home', href: '/' },
	{ label: 'Blog', href: '/blog' },
	{ label: `#${tag}`, href: `/blog/tag/${tag}`, current: true },
];
---

<DefaultLayout
	metadata={{
		title: `${tag} Posts | Jannik Wempe`,
		description: `Browse all articles about ${tag} - insights, tutorials, and best practices on ${tag} development.`,
	}}
	{breadcrumbItems}
>
	<Fragment slot="header">
		<BlogIndexJsonLd posts={posts.slice(0, 5)} {breadcrumbItems} />
	</Fragment>
	<div class="container mx-auto pt-8">
		<h1 class="text-3xl font-bold text-indigo-900">
			{posts.length}
			#{tag}
			{posts.length === 1 ? 'Post' : 'Posts'}
		</h1>

		<div class="mt-4">
			<a href="/blog" class="inline-flex items-center gap-1 text-indigo-600 hover:text-indigo-800">
				<Icon name="lucide:arrow-left" class="h-5 w-5" />
				Back to all posts
			</a>
		</div>

		<div class="mt-12 grid grid-cols-1 gap-12 md:grid-cols-2">
			{posts.map((post, index) => <BlogPostCard post={post} imageProps={{ loading: index <= 3 ? 'eager' : 'lazy' }} />)}
		</div>
	</div>
</DefaultLayout>
