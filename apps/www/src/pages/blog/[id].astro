---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import { getCollection, render } from 'astro:content';
import Prose from '~/components/Prose.astro';
import BlogPostLayout from '~/layouts/BlogPostLayout.astro';
import { formatDate } from '~/utils/time';
import type { GetStaticPaths } from 'astro';
import { getCoverImageSrc, isExternalCoverImage } from '~/utils/image';
import BlogPostJsonLd from '~/components/BlogPostJsonLd.astro';

export const prerender = true;

export const getStaticPaths = (async () => {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { id: post.id },
		props: { post },
	}));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await render(post);

const formattedDatePublished = formatDate(post.data.datePublished);

const breadcrumbItems = [
	{ label: 'Home', href: '/' },
	{ label: 'Blog', href: '/blog' },
	{ label: post.data.title, href: `/blog/${post.id}`, current: true },
];
---

<BlogPostLayout {post} {headings} {breadcrumbItems}>
	<Fragment slot="header">
		<BlogPostJsonLd {post} {breadcrumbItems} />
		<Image
			transition:name={`cover-${post.data.slug}`}
			src={getCoverImageSrc(post.data.cover)}
			alt={post.data.title}
			width={isExternalCoverImage(post.data.cover) ? 1200 : post.data.cover.width}
			height={isExternalCoverImage(post.data.cover) ? 630 : post.data.cover.height}
			loading="eager"
			format="webp"
			class="mb-4 rounded-lg"
		/>

		<h1 transition:name={`title-${post.data.slug}`} class="text-3xl font-bold text-indigo-900">{post.data.title}</h1>
		{post.data.subtitle && <h2 class="mt-2 text-xl font-semibold text-indigo-900/70">{post.data.subtitle}</h2>}

		{
			post.data.tags && post.data.tags.length > 0 && (
				<div class="mt-3 flex flex-wrap gap-2">
					{post.data.tags.map((tag: string) => (
						<a
							href={`/blog/tag/${tag}`}
							class="inline-flex items-center rounded-full bg-slate-100 px-2.5 py-0.5 text-xs font-medium text-slate-700 transition-colors hover:bg-slate-200 hover:text-indigo-700"
						>
							{tag}
						</a>
					))}
				</div>
			)
		}

		<div class="mt-3 flex items-center gap-5">
			<div class="flex items-center gap-1">
				<Icon name="lucide:calendar" class="text-slate-500" />
				<time class="block text-sm font-semibold text-slate-500">
					{formattedDatePublished}
				</time>
			</div>
			{
				remarkPluginFrontmatter.readingTime && (
					<div class="flex items-center gap-1">
						<Icon name="lucide:clock" class="text-slate-500" />
						<span class="text-sm font-semibold text-slate-500">{remarkPluginFrontmatter.readingTime.text}</span>
					</div>
				)
			}
		</div>
	</Fragment>

	<Prose id="content" class="mt-8">
		<Content />
	</Prose>
</BlogPostLayout>

<script>
	function makeHeadingsClickable() {
		const content = document.getElementById('content');
		if (!content) return;

		const headings = content.querySelectorAll('h1, h2, h3, h4, h5, h6');
		headings.forEach((heading) => {
			heading.classList.add('cursor-pointer', 'hover:text-indigo-800');

			heading.addEventListener('click', () => {
				window.location.hash = heading.id;
			});
		});
	}

	document.addEventListener('astro:page-load', makeHeadingsClickable);
</script>
