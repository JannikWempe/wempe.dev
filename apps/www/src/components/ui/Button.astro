---
import type { HTMLTag, Polymorphic } from 'astro/types';
import { twMerge } from 'tailwind-merge';

type Props<T extends HTMLTag = 'button'> = Polymorphic<{ as: T }> & {
	variant?: 'solid' | 'outline' | 'ghost';
	size?: 'sm' | 'md' | 'lg' | 'xl';
	color?: 'primary' | 'secondary';
	class?: string;
};

const {
	as: Tag = 'button' as any,
	variant = 'solid',
	size = 'md',
	color = 'primary',
	class: className = '',
	...rest
} = Astro.props;

const baseStyles =
	'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50';

const variants = {
	primary: {
		solid: 'bg-indigo-600 text-white hover:bg-indigo-700 active:bg-indigo-800 focus-visible:ring-indigo-500',
		outline: 'border-2 border-indigo-600 text-indigo-600 hover:bg-indigo-50 active:bg-indigo-100',
		ghost: 'text-indigo-600 hover:bg-indigo-50 active:bg-indigo-100',
	},
	secondary: {
		solid: 'bg-blue-600 text-white hover:bg-blue-700 active:bg-blue-800 focus-visible:ring-blue-500',
		outline: 'border-2 border-blue-600 text-blue-600 hover:bg-blue-50 active:bg-blue-100',
		ghost: 'text-blue-600 hover:bg-blue-50 active:bg-blue-100',
	},
};

const sizes = {
	sm: 'h-8 px-3 text-sm gap-1.5',
	md: 'h-10 px-4 text-sm gap-2',
	lg: 'h-12 px-6 text-base gap-2.5',
	xl: 'h-14 px-8 text-lg gap-3',
};

const classes = twMerge(baseStyles, variants[color][variant], sizes[size], className);
---

<Tag class={classes} {...rest}>
	<slot name="icon-left" />
	<slot />
	<slot name="icon-right" />
</Tag>
