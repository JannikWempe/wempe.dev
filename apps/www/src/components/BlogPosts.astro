---
import { Icon } from 'astro-icon/components';
import { Image } from '@unpic/astro';
import { twMerge } from 'tailwind-merge';

import { getBlogPosts } from '~/lib/blog';
import { formatDate } from '~/utils/time';

interface Props {
	limit?: number;
	class?: string;
}

const { limit = 4, class: className } = Astro.props;

const posts = await getBlogPosts(limit);

Astro.response.headers.set('Cache-Control', 'max-age=3600, stale-while-revalidate=600, stale-if-error=86400');
Astro.response.headers.set('Cache-Tag', 'blog-posts');
---

<ul class={twMerge('grid grid-cols-1 gap-8 md:grid-cols-2', className)}>
	{
		posts.map((post) => (
			<li class="relative overflow-hidden rounded-lg bg-white shadow-md shadow-indigo-200 transition-shadow duration-300 focus-within:ring-4 focus-within:ring-indigo-500 focus-within:ring-offset-4 hover:shadow-lg hover:shadow-indigo-200">
				<Image
					cdn="imgix"
					src={post.coverImage.url + '?fit=crop&q=80&auto=compress,format'}
					alt={post.title}
					layout="constrained"
					width={656}
					height={369}
					background="auto"
				/>
				<div class="p-4">
					<h3 class="text-pretty text-xl font-bold text-indigo-900">{post.title}</h3>
					<div class="mt-2 flex items-center gap-6">
						<div class="flex items-center gap-1 text-sm font-semibold text-slate-700">
							<Icon name="lucide:calendar" />
							<time>{formatDate(post.publishedAt)}</time>
						</div>
						<div class="flex items-center gap-1 text-sm font-semibold text-slate-700">
							<Icon name="lucide:book-open" />
							<span>{post.readTimeInMinutes} min read</span>
						</div>
					</div>
					<p class="mt-3 text-slate-700">{post.brief}</p>
				</div>
				<a href={post.url} class="absolute inset-0 active:ring-2 active:ring-indigo-500">
					<span class="sr-only">Read the full post</span>
				</a>
			</li>
		))
	}
</ul>
