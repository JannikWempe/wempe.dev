---
import { Schema } from 'astro-seo-schema';
import type { CollectionEntry } from 'astro:content';
import { render } from 'astro:content';
import { blog, blogPosting, breadcrumbItem, breadcrumbList } from '~/lib/json-ld';
import type { BreadcrumbItem } from './Breadcrumb.astro';

interface Props {
	posts: CollectionEntry<'blog'>[];
	breadcrumbItems: BreadcrumbItem[];
}

const { posts, breadcrumbItems } = Astro.props;

const blogPosts = await Promise.all(
	posts.map(async (post) => {
		const { remarkPluginFrontmatter } = await render(post);

		return blogPosting({
			post,
			readingTime: remarkPluginFrontmatter.readingTime,
		});
	}),
);

const url = new URL('/blog', Astro.site).toString();
const breadcrumbItemsLd = breadcrumbItems.map((item, index) => {
	return breadcrumbItem({
		position: index + 1,
		name: item.label,
		url: new URL(item.href, Astro.site).toString(),
	});
});
---

<Schema
	item={{
		'@context': 'https://schema.org',
		'@graph': [
			blog({
				url,
				blogPosts,
			}),
			breadcrumbList({
				items: breadcrumbItemsLd,
			}),
		],
	}}
/>
